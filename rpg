#!/bin/sh

#
# rpg - random palette generator
#

add_sequence() {
    seqs="$seqs]$1;$2\\";

    case $1 in
        *";"*)
            [ "${1##*;}" -lt 16 ] && {
                printf '%s\n' "color${1##*;}=\"$2\"" >> "$cache_dir/colors"
            }
        ;;
    esac
}

rgb() {
    set -f

    # shellcheck disable=SC2046
    set -- $(shuf -i "$1"-"$2" -n 1)

    printf '%02x\n' "$1"

    set +f
}

hex() {
    min=120
    max=180

    [ "$light" ] && {
        min=100
        max=160
    }

    r=$(rgb "${1:-$min}" "${2:-$max}")
    g=$(rgb "${3:-$min}" "${4:-$max}")
    b=$(rgb "${5:-$min}" "${6:-$max}")

    printf '#%s%s%s\n' "$r" "$g" "$b"
}


print_palette() {
    printf '\n'

    # This nifty thrifty syntax is borrowed from:
    # https://github.com/dylanaraps/bin/blob/c06b2c0df0194487fc4cb9c65b451b6369e2c398/shuffle#L17
    for i in 1 2 3 4 5 6 7; do
        printf '\033[4%sm  \033[m ' "$i"
    done

    printf '\n\n'

    exit
}

main() {
    mkdir -p "${cache_dir:=${HOME}/.cache/rpg}"

    case $1 in
        d|dark) ;;
        l|light) light=1 ;;
        r|reload) cat "$cache_dir/sequences" 2>/dev/null; exit ;;
        c|current) print_palette ;;
        *) printf '%s\n' \
            "Usage: rpg [OPTION]" \
            "  d, dark       Generate dark palette" \
            "  l, light      Generate light palette" \
            "  r, reload     Reload current palette" \
            "  c, current    Print current palette"
            exit
        ;;
    esac

    bg="$(hex "20" "30" "30" "40" "40" "50")"
    fg="$(hex "220" "230" "230" "240" "240" "250")"
    black="$(hex "60" "70" "70" "80" "80" "90")"

    [ "$light" ] && {
        bg="$(hex "245" "250" "245" "250" "245" "250")"
        fg="$(hex "40" "50" "50" "60" "60" "70")"
        black="$(hex "170" "180" "170" "180" "170" "180")"
    }

    red="$(hex)"
    green="$(hex)"
    yellow="$(hex)"
    blue="$(hex)"
    magenta="$(hex)"
    cyan="$(hex)"

    :> "$cache_dir/colors"

    # Regular colors
    add_sequence "4;0" "$bg"
    add_sequence "4;1" "$red"
    add_sequence "4;2" "$green"
    add_sequence "4;3" "$yellow"
    add_sequence "4;4" "$blue"
    add_sequence "4;5" "$magenta"
    add_sequence "4;6" "$cyan"
    add_sequence "4;7" "$fg"
    add_sequence "4;8" "$black"
    add_sequence "4;9" "$red"
    add_sequence "4;10" "$green"
    add_sequence "4;11" "$yellow"
    add_sequence "4;12" "$blue"
    add_sequence "4;13" "$magenta"
    add_sequence "4;14" "$cyan"
    add_sequence "4;15" "$fg"

    # Special colors
    # 10:  Foreground color
    # 11:  Background color
    # 12:  Cursor foreground color
    # 13:  Mouse foreground color
    # 17:  Highlight background Color
    # 19:  Highlight foreground Color
    # 256: Cursor color
    # 257: Reversed cursor color
    # 258: Background color
    # 259: Foreground color
    add_sequence "10" "$fg"
    add_sequence "11" "$bg"
    add_sequence "12" "$fg"
    add_sequence "13" "$fg"
    add_sequence "17" "$bg"
    add_sequence "19" "$fg"
    add_sequence "4;256" "$fg"
    add_sequence "4;257" "$bg"
    add_sequence "4;258" "$bg"
    add_sequence "4;259" "$fg"

    # Unless VTE
    # 708: Border color
    [ "$VTE_VERSION" ] || add_sequence "708" "$bg"

    command -v xsetroot >/dev/null && xsetroot -solid "$black"

    for tty in /dev/pts/[0-9]*; do
        [ -w "$tty" ] && printf %b "$seqs" > "$tty" &
    done

    printf %b "$seqs" > "$cache_dir/sequences"

    print_palette
}

main "$@"
